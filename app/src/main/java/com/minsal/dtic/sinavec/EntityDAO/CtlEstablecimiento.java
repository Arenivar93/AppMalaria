package com.minsal.dtic.sinavec.EntityDAO;

import org.greenrobot.greendao.annotation.*;

import com.minsal.dtic.sinavec.EntityDAO.DaoSession;
import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table "CTL_ESTABLECIMIENTO".
 */
@Entity(active = true)
public class CtlEstablecimiento {

    @Id
    private Long id;
    private String nombre;
    private String latitud;
    private String longitud;
    private long idMunicipio;
    private long idTipoEstablecimiento;
    private long idEstablecimientoPadre;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient CtlEstablecimientoDao myDao;

    @ToOne(joinProperty = "idEstablecimientoPadre")
    private CtlEstablecimiento ctlEstablecimiento;

    @Generated
    private transient Long ctlEstablecimiento__resolvedKey;

    @ToOne(joinProperty = "idMunicipio")
    private CtlMunicipio ctlMunicipio;

    @Generated
    private transient Long ctlMunicipio__resolvedKey;

    @ToOne(joinProperty = "idTipoEstablecimiento")
    private CtlTipoEstablecimiento ctlTipoEstablecimiento;

    @Generated
    private transient Long ctlTipoEstablecimiento__resolvedKey;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public CtlEstablecimiento() {
    }

    public CtlEstablecimiento(Long id) {
        this.id = id;
    }

    @Generated
    public CtlEstablecimiento(Long id, String nombre, String latitud, String longitud, long idMunicipio, long idTipoEstablecimiento, long idEstablecimientoPadre) {
        this.id = id;
        this.nombre = nombre;
        this.latitud = latitud;
        this.longitud = longitud;
        this.idMunicipio = idMunicipio;
        this.idTipoEstablecimiento = idTipoEstablecimiento;
        this.idEstablecimientoPadre = idEstablecimientoPadre;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getCtlEstablecimientoDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getLatitud() {
        return latitud;
    }

    public void setLatitud(String latitud) {
        this.latitud = latitud;
    }

    public String getLongitud() {
        return longitud;
    }

    public void setLongitud(String longitud) {
        this.longitud = longitud;
    }

    public long getIdMunicipio() {
        return idMunicipio;
    }

    public void setIdMunicipio(long idMunicipio) {
        this.idMunicipio = idMunicipio;
    }

    public long getIdTipoEstablecimiento() {
        return idTipoEstablecimiento;
    }

    public void setIdTipoEstablecimiento(long idTipoEstablecimiento) {
        this.idTipoEstablecimiento = idTipoEstablecimiento;
    }

    public long getIdEstablecimientoPadre() {
        return idEstablecimientoPadre;
    }

    public void setIdEstablecimientoPadre(long idEstablecimientoPadre) {
        this.idEstablecimientoPadre = idEstablecimientoPadre;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public CtlEstablecimiento getCtlEstablecimiento() {
        long __key = this.idEstablecimientoPadre;
        if (ctlEstablecimiento__resolvedKey == null || !ctlEstablecimiento__resolvedKey.equals(__key)) {
            __throwIfDetached();
            CtlEstablecimientoDao targetDao = daoSession.getCtlEstablecimientoDao();
            CtlEstablecimiento ctlEstablecimientoNew = targetDao.load(__key);
            synchronized (this) {
                ctlEstablecimiento = ctlEstablecimientoNew;
            	ctlEstablecimiento__resolvedKey = __key;
            }
        }
        return ctlEstablecimiento;
    }

    @Generated
    public void setCtlEstablecimiento(CtlEstablecimiento ctlEstablecimiento) {
        if (ctlEstablecimiento == null) {
            throw new DaoException("To-one property 'idEstablecimientoPadre' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.ctlEstablecimiento = ctlEstablecimiento;
            idEstablecimientoPadre = ctlEstablecimiento.getId();
            ctlEstablecimiento__resolvedKey = idEstablecimientoPadre;
        }
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public CtlMunicipio getCtlMunicipio() {
        long __key = this.idMunicipio;
        if (ctlMunicipio__resolvedKey == null || !ctlMunicipio__resolvedKey.equals(__key)) {
            __throwIfDetached();
            CtlMunicipioDao targetDao = daoSession.getCtlMunicipioDao();
            CtlMunicipio ctlMunicipioNew = targetDao.load(__key);
            synchronized (this) {
                ctlMunicipio = ctlMunicipioNew;
            	ctlMunicipio__resolvedKey = __key;
            }
        }
        return ctlMunicipio;
    }

    @Generated
    public void setCtlMunicipio(CtlMunicipio ctlMunicipio) {
        if (ctlMunicipio == null) {
            throw new DaoException("To-one property 'idMunicipio' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.ctlMunicipio = ctlMunicipio;
            idMunicipio = ctlMunicipio.getId();
            ctlMunicipio__resolvedKey = idMunicipio;
        }
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public CtlTipoEstablecimiento getCtlTipoEstablecimiento() {
        long __key = this.idTipoEstablecimiento;
        if (ctlTipoEstablecimiento__resolvedKey == null || !ctlTipoEstablecimiento__resolvedKey.equals(__key)) {
            __throwIfDetached();
            CtlTipoEstablecimientoDao targetDao = daoSession.getCtlTipoEstablecimientoDao();
            CtlTipoEstablecimiento ctlTipoEstablecimientoNew = targetDao.load(__key);
            synchronized (this) {
                ctlTipoEstablecimiento = ctlTipoEstablecimientoNew;
            	ctlTipoEstablecimiento__resolvedKey = __key;
            }
        }
        return ctlTipoEstablecimiento;
    }

    @Generated
    public void setCtlTipoEstablecimiento(CtlTipoEstablecimiento ctlTipoEstablecimiento) {
        if (ctlTipoEstablecimiento == null) {
            throw new DaoException("To-one property 'idTipoEstablecimiento' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.ctlTipoEstablecimiento = ctlTipoEstablecimiento;
            idTipoEstablecimiento = ctlTipoEstablecimiento.getId();
            ctlTipoEstablecimiento__resolvedKey = idTipoEstablecimiento;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
